input {
    file {        path => "/tmp/icij/data/*.nodes.entity.csv"       
                  start_position => beginning
                  sincedb_path => "/dev/null"
                  ignore_older => 0
         }
}


filter {

 if ["node_id"]  
	    {
        drop {}
        } 

  csv {
      separator => "," 
      skip_empty_columns => true
      columns => [
                 "nodeId",
                 "nodeName",
                 "nodeJurisdiction",
                 "nodeJurisdictionDescription",
                 "nodeCountryCode",
                 "nodeCountries",
                 "nodeIncorporationDate",
                 "nodeInactivationDate", 
                 "nodeStruckOffDate", 
                 "nodeClosedDate",
                 "nodeIbcRUC",
                 "nodeStatus",
                 "nodeCompanyType",
                 "nodeServiceProvider",
                 "nodeSource",
                 "nodeValidUntil",
                 "nodeNote"
                  ]
  }
mutate {
      remove_field => ["message","@timestamp", "path", "@version","host"]
}

  mutate {
    gsub => [
      # replace all forward slashes with underscore
      "nodeCategory", "\"", "",
      "nodeCategory", "\]", "",
      "nodeCategory", "\[", ""
    ]
  }

#if [nodeAddress] {  
#  rest {
#    request => {
#      url => "http://localhost:8080/parser"    
#      method => "post"                  
#      params => {                       
#        "query" => "%{nodeAddress}"
#      }
#    }
#    json => true                        
#    target => "nodeAddressParsed"            
#  }
#}

#if [nodeCountryCode] {  
#    elasticsearch {
#      index => "country"
#      hosts => ["http://elasticsearch1"]
#      enable_sort => false
#      query => "alpha3Code:%{[nodeCountryCode]}"
#      fields => {"region" => "nodeCountryRegion"
#                 "subregion" => "nodeCountrySubRegion"
#                 }
#      }
#}      

}

output {
##    stdout {codec => rubydebug}
    stdout {codec => dots}
    elasticsearch {
      index => "icij-entities"
      hosts => ["http://elasticsearch"]
      doc_as_upsert => true
#      retry_on_conflict => 3
      action => "update"
      document_type => "_doc" 
      document_id =>    "%{[nodeId]}"
#      #ssl_certificate_verification => false    
      sniffing => true
      sniffing_delay => 999
      template      => "/usr/share/logstash/config/mapping.json"
      template_name => "icij-entities"
      template_overwrite => true  
      }
}
